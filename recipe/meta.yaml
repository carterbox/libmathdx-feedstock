{% set version = "0.2.2" %}
{% set soname = version.split(".")[0] %}

package:
  name: libmathdx-split
  version: {{ version }}

source:
  - url: https://developer.nvidia.com/downloads/compute/cublasdx/redist/cublasdx/libmathdx-Linux-x86_64-{{ version }}.tar.gz  # [linux and x86_64]
    sha256: 614dba977abe1c7d5fc810fdea832b97e7bdea09a20bf92bcc9bfa549b2cde66  # [linux and x86_64]
  - url: https://developer.nvidia.com/downloads/compute/cublasdx/redist/cublasdx/libmathdx-Linux-aarch64-{{ version }}.tar.gz  # [linux and aarch64]
    sha256: b9a7419761d3588ce96325311ea9cb66daaae36bf5dca61748e257cf45a0b6b9  # [linux and aarch64]
  - url: https://developer.nvidia.com/downloads/compute/cublasdx/redist/cublasdx/libmathdx-win32-x86_64-{{ version }}.zip  # [win and x86_64]
    sha256: 71d3024a31602db34b6555fc11480a9224e6aa087f6babb43a94b7327998ee09  # [win and x86_64]

build:
  number: 0
  skip: true  # [((cuda_compiler_version or "").startswith("11")) or ((cuda_compiler_version or "None") == "None")]
  script:
    - check-glibc $SRC_DIR/lib*/*.so.*  # [linux]
    - mkdir -p $PREFIX/include/  # [linux]
    - cp -r $SRC_DIR/include/* $PREFIX/include/  # [linux]
    - mkdir -p $PREFIX/lib/  # [linux]
    - cp -r $SRC_DIR/lib/* $PREFIX/lib/  # [linux]
    - mkdir %PREFIX%\include\  # [win]
    - xcopy "%SRC_DIR%\include\*" "%PREFIX%\Library\include\" /E /I /Y  # [win]
    - mkdir %PREFIX%\Library\bin\  # [win]
    - xcopy "%SRC_DIR%\bin\*.dll" "%PREFIX%\Library\bin\" /E /I /Y  # [win]
    - mkdir %PREFIX%\Library\lib\  # [win]
    - xcopy "%SRC_DIR%\lib\*" "%PREFIX%\Library\lib\" /E /I /Y  # [win]

requirements:
  build:
    - cf-nvidia-tools 1.*  # [linux]

outputs:
  - name: libmathdx{{ soname }}
    build:
      ignore_run_exports:
        - cuda-nvrtc
        - cuda-version
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}
        - {{ stdlib('c') }}
      host:
        - cuda-version {{ cuda_compiler_version }}
        - cuda-nvrtc-dev
      run:
        - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }}
        - cuda-nvrtc
    files:
      - lib/libmathdx.so.*  # [linux]
      - Library\bin\mathdx*.dll  # [win]
    test:
      commands:
        - test -L $PREFIX/lib/libmathdx.so.{{ soname }}  # [linux]
        - test -f $PREFIX/lib/libmathdx.so.{{ version }}  # [linux]
        - if not exist %PREFIX%\Library\bin\mathdx64_{{ soname }}.dll exit 1  # [win]
    about:
      summary: The libmathdx runtime library.
      description: >-
        This is a runtime package only. Developers should install libmathdx-dev to build with libmathdx.
      license: LicenseRef-MathDx-Software-License-Agreement
      license_file: LICENSE.txt

  - name: libmathdx
    build:
      noarch: generic
    requirements:
      host:
        - {{ pin_subpackage('libmathdx' ~ soname, max_pin=None) }}
      run:
      # FIXME: max_pin=None when library is stable
        - {{ pin_subpackage('libmathdx' ~ soname, max_pin="x.x.x") }}
    about:
      summary: The libmathdx runtime library.
      description: >-
        This is a runtime package only. Developers should install libmathdx-dev to build with libmathdx.
      license: LicenseRef-MathDx-Software-License-Agreement
      license_file: LICENSE.txt

  - name: libmathdx-dev
    build:
      run_exports:
      # FIXME: both run_exports max_pin=None when library is stable
        - {{ pin_subpackage('libmathdx', max_pin="x.x.x") }}
        - {{ pin_subpackage('libmathdx' ~ soname, max_pin="x.x.x") }}
    requirements:
      host:
        - cuda-version {{ cuda_compiler_version }}
        - {{ pin_subpackage('libmathdx', exact=True) }}
        - {{ pin_subpackage('libmathdx' ~ soname, exact=True) }}
      run:
        - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }}
        - {{ pin_subpackage('libmathdx', exact=True) }}
        - {{ pin_subpackage('libmathdx' ~ soname, exact=True) }}
    files:
      - include  # [linux]
      - Library\include\  # [win]
      - lib/libmathdx.so  # [linux]
      - Library\lib\x64\mathdx.lib  # [win]
    test:
      commands:
        - test -f $PREFIX/include/libcufftdx.h  # [linux]
        - test -f $PREFIX/include/libcublasdx.h  # [linux]
        - test -f $PREFIX/include/libcusolverdx.h  # [linux]
        - test -f $PREFIX/include/libmathdx.h  # [linux]
        - test -f $PREFIX/include/libcommondx.h  # [linux]
        - test -L $PREFIX/lib/libmathdx.so  # [linux]
        - test ! -f $PREFIX/lib/libmathdx_static.a  # [linux]
        - if not exist %PREFIX%\Library\include\libcufftdx.h exit 1  # [win]
        - if not exist %PREFIX%\Library\include\libcublasdx.h exit 1  # [win]
        - if not exist %PREFIX%\Library\include\libcusolverdx.h exit 1  # [win]
        - if not exist %PREFIX%\Library\include\libmathdx.h exit 1  # [win]
        - if not exist %PREFIX%\Library\include\libcommondx.h exit 1  # [win]
        - if not exist %PREFIX%\Library\lib\x64\mathdx.lib exit 1  # [win]
        - if exist %PREFIX%\Library\lib\x64\mathdx_static.lib exit 1  # [win]

  - name: libmathdx-static
    build:
      ignore_run_exports:
        - cuda-version
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}
        - {{ stdlib('c') }}
      host:
        - cuda-version {{ cuda_compiler_version }}
        - {{ pin_subpackage('libmathdx-dev', exact=True) }}
      run:
        - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }}
        - {{ pin_subpackage('libmathdx-dev', exact=True) }}
    files:
      - lib/libmathdx_static.a  # [linux]
      - Library\lib\x64\mathdx_static.lib  # [win]
    test:
      commands:
        - test -f $PREFIX/lib/libmathdx_static.a  # [linux]
        - if not exist %PREFIX%\Library\lib\x64\mathdx_static.lib exit 1  # [win]
    about:
      summary: The libmathdx static library.
      description: >-
        Developers should install this package to link statically with libmathdx.
      license: LicenseRef-MathDx-Software-License-Agreement
      license_file: LICENSE.txt

about:
  home: https://developer.nvidia.com/mathdx
  license: LicenseRef-MathDx-Software-License-Agreement
  license_file: LICENSE.txt
  license_url: https://docs.nvidia.com/cuda/cufftdx/license.html
  summary: The development package for libmathdx.
  description: >-
    NVIDIA libmathdx is a runtime code-generation library for cuFFTDx and cuBLASDx. This is the development package. Developers should install this package to link dynamically with libmathdx.
  doc_url: https://docs.nvidia.com/cuda/cufftdx/index.html

extra:
  feedstock-name: libmathdx
  recipe-maintainers:
    - conda-forge/cuda
